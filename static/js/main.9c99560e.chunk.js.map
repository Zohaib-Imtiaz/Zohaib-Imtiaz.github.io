{"version":3,"sources":["routes/Home/Home.module.less","routes/Home/Introduction/Introduction.module.less","routes/Home/ContactForm/ContactForm.tsx","assets/portfolio.svg","routes/Home/Introduction/Introduction.tsx","classesAndInterfaces/DevCard.tsx","components/DevCard/DevCard.tsx","components/SwipingCarousal/SwipingCarousal.tsx","assets/frontend.svg","assets/backend.svg","assets/aws.svg","routes/Home/SkillCards/SkillCards.tsx","textFiles/frontend.ts","textFiles/aws.ts","textFiles/backend.ts","assets/laptop1.svg","routes/routes.tsx","routes/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/DevCard/DevCard.module.less"],"names":["module","exports","ContactForm","breakpoints","useBreakpoint","colSpan","useMemo","screens","Object","entries","filter","screen","length","offset","span","name","labelCol","wrapperCol","initialValues","remember","onFinish","values","subject","message","body","window","open","onFinishFailed","errorInfo","console","log","autoComplete","Item","label","rules","required","TextArea","autoSize","minRows","maxRows","showCount","type","htmlType","Introduction","useState","drawer","setDrawer","Grid","image_col_span","heading_col_span","align","justify","src","DisplayPic","alt","className","styles","display_pic","title","width","closable","onClose","visible","DevCardClass","description","image_url","techonologiesAndTools","this","DevCard","openDrawer","showCase","setShowCase","Contents","modal","style","wrapper_div","hoverable","card_style","onClick","cover","card_cover","card_contents","showcased","card_row","join","toLocaleUpperCase","card_description","card_description_overview","technologiesAndTools","map","item","index","centered","footer","onCancel","modal_content","invisible","SwipingCarousal","children","swipeToSlide","slidesToShow","dots","infinite","arrows","prevArrow","LeftCircleOutlined","nextArrow","RightCircleOutlined","marginBottom","devCardArray","FrontendCover","AwsCover","BackendCover","SkillCards","gutter","card","routes","url","component","intro_col_span","illustration_col_span","glass_morphism","HeaderImgLaptop","App","route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c99560e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"body_aVkN9\",\"glass_morphism\":\"glass_morphism_7BQSx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display_pic\":\"display_pic_Q7l0d\"};","import { Button, Form, Input } from \"antd\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport { useMemo } from \"react\";\n\nconst ContactForm = () => {\n  const breakpoints = useBreakpoint()\n\n\tconst colSpan: {offset: number; span: number;} = useMemo(() => {\n\t\tconst screens = Object.entries(breakpoints).filter(screen => !!screen[1])\n\t\tconst screen_size = screens[screens.length - 1]?.[0]\n\t\tswitch (screen_size) {\n\t\t\tcase 'xl': return {offset: (24 / 3), span: (24 / 3)}\n\t\t\tcase 'lg': return {offset: (24 / 3), span: (24 / 2)}\n\t\t\tcase 'md': return {offset: (24 / 3), span: (24 / 2)}\n\t\t\tcase 'sm': return {offset: (24 / 4), span: (24 / 2)}\n\t\t\tcase 'xs': return {offset: (24 / 3), span: (24 / 2)}\n\t\t\tdefault: return {offset: (24 / 3), span: (24 / 3)}\n\t\t}\n\t}, [breakpoints])\n\n\n  const onFinish = (values: any) => {\n    const email = 'zohaib_phone@outlook.com'\n    const {name, subject, message} = values;\n    const body = `From: ${name} %0D%0A%0D%0A${message}`\n    window.open(`mailto:${email}?subject=${subject}&body=${body}`)\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{ span: colSpan.offset }}\n      wrapperCol={{ span: colSpan.span }}\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Please input your Name!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Subject\"\n        name=\"subject\"\n        rules={[{ required: true, message: \"Please input Subject!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Message\"\n        name=\"message\"\n        rules={[{ required: true, message: \"Please write your Message!\" }]}\n      >\n        <Input.TextArea autoSize={{minRows: 2, maxRows: 6}} showCount={true} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: colSpan.offset, span: colSpan.span }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","export default __webpack_public_path__ + \"static/media/portfolio.c963e1b7.svg\";","import { DownloadOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Drawer, Grid, Row } from \"antd\";\nimport { useMemo, useState } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport DisplayPic from \"../../../assets/portfolio.svg\";\nimport styles from './Introduction.module.less'\n\nconst Introduction = () => {\n  const [drawer, setDrawer] = useState(false);\n\n  const openDrawer: React.MouseEventHandler<HTMLElement> = () => {\n    setDrawer(true);\n  };\n\n  const { useBreakpoint } = Grid;\n  const breakpoints = useBreakpoint();\n\n  /**\n   * @memorized value for display picture sizes width according to screen\n   */\n  const image_col_span: number = useMemo(() => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"xxl\":\n        return 6;\n      case \"md\":\n        return 8;\n      // case \"sm\":\n      //   return 24 / 1;\n      case \"xs\":\n        return 8;\n      default:\n        return 8;\n    }\n  }, [breakpoints]);\n\n  /**\n   * @memorized value for heading sizes width according to screen\n   */\n  const heading_col_span: number = useMemo(() => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"xxl\":\n        return 16;\n      case \"lg\":\n        return 16;\n      case \"md\":\n        return 16;\n      case \"sm\":\n        return 16;\n      case \"xs\":\n        return 16;\n      default:\n        return 16;\n    }\n  }, [breakpoints]);\n\n\n  return (\n    <>\n      <Row align={\"middle\"} justify={\"start\"}>\n        <Col span={image_col_span}>\n          <img src={DisplayPic} alt={\"self\"} className={styles.display_pic} />\n        </Col>\n        <Col span={heading_col_span}>\n          <h1>Muhammad Zohaib Imtiaz</h1>\n          <h3>FullStack Software Engineer</h3>\n          {/* <Button type=\"primary\" shape=\"round\" onClick={openDrawer}>\n            Contact me\n          </Button> */}\n          <h6>Select the cards below to see further information</h6>\n\n        </Col>\n        {/* <Col>\n          <a href=\"/Resume.pdf\" download=\"Resume\" target='_blank'>\n            <Button type=\"primary\" shape=\"round\">\n              Download CV\n              <DownloadOutlined />\n            </Button>\n          </a>\n        </Col> */}\n      </Row>\n      <Drawer\n        title=\"Contact\"\n        width={\"100%\"}\n        closable={true}\n        onClose={() => {\n          setDrawer(false);\n        }}\n        visible={drawer}\n      >\n        <ContactForm />\n      </Drawer>\n    </>\n  );\n};\n\nexport default Introduction;\n","interface DevCardObject {\n  /**\n   * @description title of the developer skill\n   */\n  title: string,\n  /**\n   * @description detail of the work and reponsibilites\n   */\n  description: string,\n  /**\n   * @description image to show on card\n   */\n  image_url: string;\n  /**\n   * @description technologies used and implemented and tools used for them\n   */\n  techonologiesAndTools?: string[];\n};\n\n/** \n *\n * @class\n * @implements {DevCardObject}\n */\nclass DevCardClass implements DevCardObject{\n  title: string;\n  description: string;\n  image_url: string;\n  techonologiesAndTools?: string[];\n\n\n  /**\n   * \n   * @param {object} DevCardObject\n   */\n  constructor({title, description, image_url, techonologiesAndTools} : DevCardObject) {\n    this.title = title;\n    this.description = description;\n    this.image_url = image_url\n    this.techonologiesAndTools = techonologiesAndTools;\n  }\n};\n\nexport {DevCardClass}\nexport type { DevCardObject };\n","import { Card as AntDesignCard, Col, Grid, Row } from \"antd\";\nimport { useMemo, useState } from \"react\";\nimport { DevCardObject } from \"../../classesAndInterfaces/DevCard\";\nimport style from \"./DevCard.module.less\";\nimport \"./DevCard.less\";\nimport Modal from \"antd/lib/modal/Modal\";\n\ninterface PropsFromSkillCards {\n  /**\n   *  @description openDrawer - function for trigerring any\n   *  action when user click on description\n   */\n  openDrawer: Function;\n}\n\nconst DevCard = ({\n  title,\n  description,\n  image_url,\n  techonologiesAndTools,\n  openDrawer,\n}: DevCardObject & PropsFromSkillCards) => {\n  const [showCase, setShowCase] = useState(false);\n  const { useBreakpoint } = Grid;\n  const breakpoints = useBreakpoint();\n\n  /**\n   * @memorized value for modal width according to screen\n   */\n  const width: string = useMemo(() => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"xl\":\n        return \"46vw\";\n      case \"lg\":\n        return \"82vw\";\n      case \"md\":\n        return \"75vw\";\n      case \"sm\":\n        return \"100%\";\n      case \"xs\":\n        return \"100%\";\n      default:\n        return \"40vw\";\n    }\n  }, [breakpoints]);\n\n  const showModal = () => {\n    setShowCase(true);\n  };\n  const closeModal = () => {\n    setShowCase(false);\n  };\n\n  /**\n   * @description Makes the UI from the DevCard object\n   * @returns JSX.Element\n   */\n  const Contents = ({modal} : {modal? :boolean}): JSX.Element => {\n    return (\n      <div className={style.wrapper_div}>\n        <AntDesignCard\n          hoverable={true}\n          className={style.card_style}\n          onClick={() => showModal()}\n          cover={\n            <img alt=\"technology\" src={image_url} className={style.card_cover} />\n          }\n        >\n          <Row\n            justify=\"start\"\n            align=\"top\"\n            className={[\n              style.card_contents,\n              modal ? style.showcased : style.card_row,\n            ].join(\" \")}\n          >\n            <Col span={24}>\n              <h1>{title.toLocaleUpperCase()}</h1>\n            </Col>\n            <Col span={24}>\n              <Row\n                className={\n                  modal\n                    ? style.card_description\n                    : style.card_description_overview\n                }\n              >\n                <Col span={24}>\n                  <p onClick={() => openDrawer()}>{description}</p>\n                </Col>\n                {modal && (\n                  <Col span={24}>\n                    <p className={style.technologiesAndTools}>\n                      {techonologiesAndTools?.map((item, index) => {\n                        if (index !== techonologiesAndTools?.length - 1) {\n                          return item + \", \";\n                        }\n                        return item;\n                      })}\n                    </p>\n                  </Col>\n                )}\n              </Row>\n            </Col>\n          </Row>\n        </AntDesignCard>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Modal\n        visible={showCase}\n        centered\n        footer={null}\n        onCancel={() => closeModal()}\n        width={width}\n        className={style.modal_content}\n      >\n        <Contents modal={true} />\n      </Modal>\n      <div className={!showCase? style.visible : style.invisible}>\n        <Contents />\n      </div>\n    </>\n  );\n};\n\nexport default DevCard;\n","import { LeftCircleOutlined, RightCircleOutlined } from \"@ant-design/icons\";\nimport { Carousel } from \"antd\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport './SwipingCarousal.less'\n\nconst SwipingCarousal = ({ children }: any) => {\n  const breakpoints = useBreakpoint();\n\n  const slidesToShow = () => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"md\":\n        return 2;\n      case \"sm\":\n        return 1;\n      case \"xs\":\n        return 1;\n      default:\n        return 3;\n    }\n  };\n\n  return (\n    <Carousel\n      swipeToSlide={true}\n      slidesToShow={slidesToShow()}\n      dots={false}\n      infinite={true}\n      arrows={true}\n      prevArrow={<LeftCircleOutlined />}\n      nextArrow={<RightCircleOutlined />}\n      style={{\n        marginBottom: '10px',\n      }}\n    >\n      {children}\n    </Carousel>\n  );\n};\n\nexport default SwipingCarousal;\n","export default __webpack_public_path__ + \"static/media/frontend.88484e3d.svg\";","export default __webpack_public_path__ + \"static/media/backend.18dd7fec.svg\";","export default __webpack_public_path__ + \"static/media/aws.1bc24c19.svg\";","import { Col, Drawer, Row } from \"antd\";\nimport { FC, useState } from \"react\";\nimport { DevCardClass, DevCardObject } from \"../../../classesAndInterfaces/DevCard\";\nimport DevCard from \"../../../components/DevCard/DevCard\";\nimport SwipingCarousal from \"../../../components/SwipingCarousal/SwipingCarousal\";\nimport { awsCardDescription, awsTechnologiesAndTools } from \"../../../textFiles/aws\";\nimport { backendCardDescription, backendTechnologiesAndTools } from \"../../../textFiles/backend\";\nimport { frontendCardDescription, frontendTechnologiesAndTools } from \"../../../textFiles/frontend\";\nimport FrontendCover from '../../../assets/frontend.svg'\nimport BackendCover from '../../../assets/backend.svg'\nimport AwsCover from '../../../assets/aws.svg'\n\n\nconst devCardArray: DevCardObject[] = [\n\tnew DevCardClass({ title: 'frontend', description: frontendCardDescription, image_url: FrontendCover, techonologiesAndTools: frontendTechnologiesAndTools }),\n\tnew DevCardClass({ title: 'aws', description: awsCardDescription, image_url: AwsCover, techonologiesAndTools: awsTechnologiesAndTools }),\n\tnew DevCardClass({ title: 'backend', description: backendCardDescription, image_url: BackendCover, techonologiesAndTools: backendTechnologiesAndTools }),\n]\n\n\nconst SkillCards: FC = () => {\n\tconst [drawer, setDrawer] = useState(false)\n\n\tconst openDrawer = () => {\n\t\tsetDrawer(true)\n\t}\n\n\n\treturn (\n\t\t<Row key={'demo'} align={'middle'} justify={'center'} gutter={[24, 24]}>\n\t\t\t<Col span={24}>\n\t\t\t\t<SwipingCarousal>\n\t\t\t\t\t{\n\t\t\t\t\t\tdevCardArray.map((card: DevCardObject, index: number) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Col key={index}>\n\t\t\t\t\t\t\t\t\t<DevCard title={card.title} description={card.description} image_url={card.image_url} techonologiesAndTools={card.techonologiesAndTools} openDrawer={openDrawer} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</SwipingCarousal>\n\t\t\t</Col>\n\t\t\t{/* <Drawer\n          title=\"Multi-level drawer\"\n          width={'100%'}\n          closable={false}\n          onClose={()=>{setDrawer(false)}}\n          visible={drawer}\n        ></Drawer> */}\n\t\t</Row>\n\t)\n}\n\nexport default SkillCards;","// const frontendCardDescription: string = `I'm an experienced software engineer who constantly seeks out innovative solutions to everyday problems.\n//  In my years in this industry, I've honed my analytical thinking and collaboration skills, and I love working with a team. I've also had the \n//  opportunity to serve as the software engineer lead for three projects with First Technology`;\n\n const frontendCardDescription: string = `Delivering well designed, performant and optimized front end for your project. \n With the experience in variety of technologies and leading development with team colaboration and agile methodologies. Creating web application at minimized sizes\n and fast performance with automated testing to deliver your best application.`;\n\nconst frontendTechnologiesAndTools: string[] = [\n  \"React\",\n  \"Redux\",\n  \"JavaScript\",\n  \"TypeScript\",\n  \"Less\",\n  \"Sass\",\n  \"Ant Design\",\n  \"Material UI\",\n  \"React testing library\",\n  \"Jest\",\n  \"Cypress\",\n  \"VS Code\",\n  \"Postman\",\n  \"Jira\",\n  \"Google Documents\",\n]\n\nexport { frontendCardDescription, frontendTechnologiesAndTools };\n","const awsCardDescription: string = `Along with the development, working on Amazon Web Services to achieve the appropriate and best tools.\nDeploying the application and connecting the services together. Managing the services according to needs of the projects. With the Cloud Computing on\nAWS, giving solutions bestfit for the products and projects.`;\n\nconst awsTechnologiesAndTools: string[] = [\n  'AWS CLI',\n  'AWS Amplify',\n  'AWS EC2',\n  'AWS S3 Bucket',\n  'AWS Lambda',\n]\n\nexport { awsCardDescription, awsTechnologiesAndTools };\n","const backendCardDescription: string = `Providing solutions for backend services. The services of backend gives promising stability, perfomance and \ndata solutions. These services also offer data processing for AI and ML training models. The implementation with Docker to deliver and deploy services. \nWith testing and test cases to automate repetitive cases and manual testing to cover the new cases to ensure quality assurance`;\n\nconst backendTechnologiesAndTools: string[] = [\n  'Node',\n  'Python',\n  'Serverless Framework',\n  'Adonis JS',\n  'Django',\n  'MicroServices'\n]\n\nexport { backendCardDescription, backendTechnologiesAndTools };\n","export default __webpack_public_path__ + \"static/media/laptop1.bb105923.svg\";","import { RouterPageProps } from \"../classesAndInterfaces/generalInterfaces\";\nimport Home from \"./Home/Home\";\n\nconst routes: {\n  url: string;\n  component: RouterPageProps;\n}[] = [\n  {\n    url: \"/\",\n    component: Home,\n  },\n];\n\nexport { routes };\n","import { Col, Grid, Row } from \"antd\";\nimport { useMemo } from \"react\";\nimport Introduction from \"./Introduction/Introduction\";\nimport style from \"./Home.module.less\";\nimport SkillCards from \"./SkillCards/SkillCards\";\nimport HeaderImgLaptop from \"../../assets/laptop1.svg\"\nimport { RouterPageProps } from \"../../classesAndInterfaces/generalInterfaces\";\n\nconst Home: RouterPageProps = () => {\n  const { useBreakpoint } = Grid;\n  const breakpoints = useBreakpoint();\n\n  /**\n   * @memorized value for card sizes width according to screen\n   */\n  const intro_col_span: number = useMemo(() => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"md\":\n        return 16;\n      case \"sm\":\n        return 24;\n      case \"xs\":\n        return 24;\n      default:\n        return 16;\n    }\n  }, [breakpoints]);\n\n  const illustration_col_span: number = useMemo(() => {\n    const screens = Object.entries(breakpoints).filter((screen) => !!screen[1]);\n    const screen_size = screens[screens.length - 1]?.[0];\n    switch (screen_size) {\n      case \"xxl\":\n        return 6;\n      case \"md\":\n        return 8;\n      case \"sm\":\n        return 0;\n      case \"xs\":\n        return 0;\n      default:\n        return 8;\n    }\n  }, [breakpoints])\n\n  return (\n    <Row align={\"middle\"} justify={\"center\"} className={style.body}>\n      <Col span={21}>\n        <Row align={\"middle\"} justify={\"space-between\"} className={style.glass_morphism}>\n          <Col span={intro_col_span}>\n            <Introduction />\n          </Col>\n          <Col span={illustration_col_span}>\n            <img src={HeaderImgLaptop} alt={\"header\"}/>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={20}>\n        <SkillCards />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Home;\n","import \"antd/dist/antd.less\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.less\";\nimport { routes } from \"./routes/routes\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        {routes.map((route, index) => {\n          return (\n            <Route path={route.url} key={index} component={route.component} />\n          );\n        })}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_style\":\"card_style_mMstT\",\"card_row\":\"card_row_ABhXt\",\"card_contents\":\"card_contents_prTpK\",\"wrapper_div\":\"wrapper_div_gxFhE\",\"showcased\":\"showcased_teLxm\",\"modal_content\":\"modal_content_PtI+-\",\"card_cover\":\"card_cover_0Sirh\",\"card_description\":\"card_description_m2aso\",\"technologiesAndTools\":\"technologiesAndTools_hxH-9\",\"card_description_overview\":\"card_description_overview_9q6kn\",\"visible\":\"visible_t-h2+\",\"invisible\":\"invisible_X6KEp\"};"],"sourceRoot":""}